1. justify-content: center;
   margin: auto;
   place-items: center;
2. Fr — дробная единица гибкости. 1fr равна 1 части доступного пространства grid-контейнера.
3. grid-templates-columns: repeat(5,1fr);
   grid-templates-columns: 1fr 1fr 1fr 1fr 1fr;
4. auto-fill помещает повторяющиеся элементы в один ряд, непоместившихся на другую строку, не занимая пустое пространство, auto-fit почти также, только пустое пространство будет схлопываться и растягивать элементы
5. display: grid;
   grid-template-columns: 100px, 30%, 1fr; grid-template-rows: 200px, 100px;
6. justify-content: space-between
7. это пространство внутри grid-контейнера, которое может содержать в себе несколько grid-элементов, grid-area:1/3/4/2;
 первая цифра-grid-row-start,
 вторая - grid-column-start,
 третья - grid-row-end,
 последняя - grid-column-end
8. HTML
   <div class="css-grid">
      <div class="grid-item-1">1</div>
      <div class="grid-item-2">2</div>
      <div class="grid-item-3">3</div>
   </div>
   CSS
   .css-grid {
    display: grid;
    grid-template-areas:"gridItem1"
                        "gridItem3"
                        "gridItem2";}
   .grid-item-1 {
    grid-area: gridItem1;}
   .grid-item-2 {
   grid-area: gridItem2;}
  .grid-item-3 {
    grid-area: gridItem3;}
9. auto-fit
10. Можно использовать почти любое имя (кроме ключевого слова span), однако можно использовать и область, созданную из этих линий, если их имена заканчиваются на -start и -end
Линии могут иметь несколько имён, заданных внутри квадратных скобок и разделённых пробелом
Несколько линий могут иметь одинаковое имя; если нужна определённая, нужно добавить после названия номер нужной линии по порядку
11. grid-template-columns:repeat(12, 1fr);
12. При прокрутке веб-страницы элемент остаётся на своём исходном месте.
Положение элемента всегда отсчитывается от области просмотра браузера, независимо от позиционирования родителя.
При выходе элемента за пределы видимой области справа или снизу от неё, не возникает полос прокрутки и элемент просто «обрезается».
Применяется такой тип позиционирования для создания меню, вкладок, заголовков, в общем, любых элементов, которые должны быть закреплены на веб-странице и всегда видны посетителю.
13. При помощи CSS Grid
